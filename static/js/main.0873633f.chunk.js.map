{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onChangeInput","searchMovie","handleEvent","addMovie","notFound","isLoading","onSubmit","htmlFor","type","id","placeholder","onChange","value","classNames","disabled","length","onClick","getMovie","query","fetch","then","res","json","catch","Response","Error","App","useState","setMovies","setTitle","movieInfo","setMovieInfo","setNotFound","setIsLoading","a","Poster","Title","Plot","imdbID","target","event","preventDefault","some","ReactDOM","render","document","getElementById"],"mappings":"gVAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC5BKC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,gBCGRC,G,MACT,SAAC,GASI,IARLC,EAQI,EARJA,cACAT,EAOI,EAPJA,MACAU,EAMI,EANJA,YACAf,EAKI,EALJA,MACAgB,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEA,OACE,qCACE,uBAAMlB,UAAU,aAAamB,SAAUJ,EAAvC,UACE,sBAAKf,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoB,QAAQ,cAAjC,yBAIA,qBAAKpB,UAAU,UAAf,SACE,uBACE,UAAQ,aACRqB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvB,UAAU,kBACVwB,SAAUX,EACVY,MAAOrB,MAIVa,GACC,mBAAGjB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRqB,KAAK,SACLrB,UAAW0B,IACT,kBACA,CACE,aAAcR,IAGlBS,SAA2B,IAAjBvB,EAAMwB,OAChBC,QAAS,kBAAMf,EAAYV,IAV7B,SAYGL,EAAQ,eAAiB,mBAI7BA,GACC,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRqB,KAAK,SACLrB,UAAU,oBACV6B,QAASb,EAJX,qCAaPjB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,YCtFvB,SAAS+B,EAASC,GACvB,OAAOC,MAAM,GAAD,OAHE,2CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uB,UCDAC,EAAM,WACjB,MAA4BC,mBAAkB,IAA9C,mBAAO/B,EAAP,KAAegC,EAAf,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOpC,EAAP,KAAcsC,EAAd,KACA,EAAkCF,mBAAuB,MAAzD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAkB,GAAlD,mBAAOvB,EAAP,KAAiB4B,EAAjB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOtB,EAAP,KAAkB4B,EAAlB,KAUMhC,EAAW,uCAAG,WAAOiB,GAAP,iBAAAgB,EAAA,6DAClBD,GAAa,GADK,kBAI+BhB,EAASC,GAJxC,OAMZ,UAFEhC,EAJU,SAORG,EAASH,EAAMiD,QAClB,sDAEHJ,EAAa,CACXxC,MAAOL,EAAMkD,MACb5C,YAAaN,EAAMmD,KACnBhD,SACAK,QAAQ,8BAAD,OAAgCR,EAAMoD,QAC7CxC,OAAQZ,EAAMoD,UAGhBN,GAAY,GAlBE,uBAqBhBC,GAAa,GArBG,uEAAH,sDA6CjB,OACE,sBAAK9C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACES,OAAQA,MAIZ,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,cA5DU,SAACkB,GACjBW,EAASX,EAAMqB,OAAO3B,OACtBoB,GAAY,IA2DNzC,MAAOA,EACPU,YAAaA,EACbf,MAAO4C,EACP5B,YApEY,SAACsC,GACnBA,EAAMC,kBAoEAtC,SAnCS,WACf,GAAK2B,EAAL,CAIA,GAAIlC,EAAO8C,MAAK,SAAAxD,GAAK,OAAIA,EAAMY,SAAWgC,EAAUhC,UAIlD,OAHA+B,EAAS,SACTE,EAAa,MAKfH,EAAU,GAAD,mBACJhC,GADI,CAEPkC,KAEFD,EAAS,IACTE,EAAa,QAmBP3B,SAAUA,EACVC,UAAWA,UClFrBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0873633f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onChangeInput: (query: React.ChangeEvent<HTMLInputElement>) => void;\n  title: string;\n  searchMovie: (query: string) => void;\n  movie: Movie | null;\n  handleEvent: (event: React.FormEvent<HTMLFormElement>) => void;\n  addMovie: () => void;\n  notFound: boolean;\n  isLoading: boolean;\n};\n\nexport const FindMovie: React.FC<Props>\n  = ({\n    onChangeInput,\n    title,\n    searchMovie,\n    movie,\n    handleEvent,\n    addMovie,\n    notFound,\n    isLoading,\n  }) => {\n    return (\n      <>\n        <form className=\"find-movie\" onSubmit={handleEvent}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                data-cy=\"titleField\"\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-dander\"\n                onChange={onChangeInput}\n                value={title}\n              />\n            </div>\n\n            {notFound && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames(\n                  'button is-light',\n                  {\n                    'is-loading': isLoading,\n                  },\n                )}\n                disabled={title.length === 0}\n                onClick={() => searchMovie(title)}\n              >\n                {movie ? 'Search again' : 'Find a movie'}\n              </button>\n            </div>\n\n            {movie && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={addMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n          </div>\n        </form>\n\n        {movie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n      </>\n    );\n  };\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c68d28e4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [title, setTitle] = useState<string>('');\n  const [movieInfo, setMovieInfo] = useState<Movie | null>(null);\n  const [notFound, setNotFound] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleEvent = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const findMovie = (query: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(query.target.value);\n    setNotFound(false);\n  };\n\n  const searchMovie = async (query: string) => {\n    setIsLoading(true);\n\n    try {\n      const movie: MovieData | ResponseError = await getMovie(query);\n\n      if ('Title' in movie) {\n        const imgUrl = movie.Poster\n        || 'https://placeholder.com/360x270.png?text=no+preview';\n\n        setMovieInfo({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        });\n      } else {\n        setNotFound(true);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const addMovie = () => {\n    if (!movieInfo) {\n      return;\n    }\n\n    if (movies.some(movie => movie.imdbId === movieInfo.imdbId)) {\n      setTitle('');\n      setMovieInfo(null);\n\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movieInfo,\n    ]);\n    setTitle('');\n    setMovieInfo(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onChangeInput={findMovie}\n          title={title}\n          searchMovie={searchMovie}\n          movie={movieInfo}\n          handleEvent={handleEvent}\n          addMovie={addMovie}\n          notFound={notFound}\n          isLoading={isLoading}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}